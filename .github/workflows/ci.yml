name: CI/CD

on:
  push:
    branches:
      - master
      - backports-v0.6.x
    tags:
      - v*.*.*
  pull_request:
    branches:
      - master
      - backports-v0.6.x
  # Run daily at 0:01 UTC
  schedule:
    - cron:  '1 0 * * *'

jobs:
  linter:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7]
    name: linter - flake8 - python ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Lint with flake8
      run: |
        python -m pip install -q flake8
        flake8 coffea

  test:
    runs-on: ${{ matrix.os }}
    needs: linter
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        java-version: [1.8]
        python-version: [3.6, 3.7, 3.8, 3.9]
        exclude:
          - os: macOS-latest
            python-version: 3.6
    name: test coffea (${{ matrix.os }}) - python ${{ matrix.python-version }}, JDK${{ matrix.java-version }}

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up JDK ${{ matrix.java-version }}
      if: matrix.os != 'windows-latest'
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}
    - name: Install dependencies (Linux/MacOS)
      if: matrix.os != 'windows-latest'
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -q -e .[dev,parsl,dask,spark]
        python -m pip list
        java -version
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -q -e .[dev]
        python -m pip list
    - name: Test with pytest
      env:
        ARROW_PRE_0_15_IPC_FORMAT: 1
      run: |
        pytest --cov-report=xml --cov=coffea tests
    - name: Upload codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.7
      run: |
        python -m pip install codecov
        codecov
    - name: Install graphviz
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.7
      uses: kamiazya/setup-graphviz@v1 
    - name: Install pandoc
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.7
      uses: r-lib/actions/setup-pandoc@v1
    - name: Build documentation
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.7
      run: |
        cd docs && make html
        touch build/html/.nojekyll
    - name: Deploy documentation
      if: github.event_name == 'push' && matrix.os == 'ubuntu-latest' && matrix.python-version == 3.7
      uses: crazy-max/ghaction-github-pages@v1.0.1
      with:
        target_branch: gh-pages
        build_dir: docs/build/html
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_OAUTH }}

  testwq:
    runs-on: ubuntu-latest
    needs: linter
    name: test coffea-workqueue

    steps:
    - uses: actions/checkout@master
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2.0.0
      with:
        auto-update-conda: true
        python-version: 3.7
    - name: Test work_queue
      shell: bash -l {0}
      run: |
        conda create --name coffea-env python=3.7
        conda activate coffea-env
        conda install -c conda-forge ndcctools dill
        python -m pip install .
        cd tests
        python wq.py

  testradosparquetjob:
    runs-on: ubuntu-latest
    needs: linter
    name: test coffea-rados-parquet-job

    steps:
    - uses: actions/checkout@master
    - name: Run the Coffea run_parquet_job example
      shell: bash -l {0}
      run: |
        docker build -t coffea-rados-parquet-test \
          --file docker/coffea_rados_parquet/Dockerfile \
          .
        docker run \
        -v $(pwd):/w \
        -w /w \
        -e IS_CI=true \
        --privileged \
        coffea-rados-parquet-test \
        ./docker/coffea_rados_parquet/script.sh

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [test, testwq, testradosparquetjob]
    strategy:
      matrix:
        python-version: [3.7]
    name: deploy release

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build package for PyPI
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python setup.py sdist bdist_wheel --universal
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_OAUTH }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
